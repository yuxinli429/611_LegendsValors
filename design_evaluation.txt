1. For the three new actions for hero in Legends2:teleport, back and attack, we create three corresponding
methods in the Hero class. The LegendsOfValor class controls the main process of the entire Game. Compared
with creating those three methods in the LegendsOfValor, we make them as methods of the Hero class, so we
can reuse them in other Legends-like games. Plus, instead of letting the LegendsOfValor handle all the user
input in this game, we move part of them into those three methods in the Hero, so it will decrease the
complexity of the LegendsOfValor. In addition, at first, we changed the position of a hero inside the tele-
port and back methods but soon found that these two behaviors may vary depend on different types of cells.
If we simply pass the configuration of this game into these two methods as arguments, then the implementation
of them depends on the rule of this game, which may deteriorate the scalability of our code. As a result, we
set the position of hero only in the LegendsOfValor class.

2. We have added the position for GameCharacter class to give hero and monsters positions. This will allow us to 
efficiently checking if hero is qualified to start a fight with monster and avoid situation like 2 heroes in the same 
spot. We tried to maintain x, y position attributes for each character just to easily maintain the explored area for
both character. However, it turns out these 2 attributes will be hard to maintain during the game and position is 
actually enough to check on different conditions. 

3. For Monster class in Legends 2 we added a moving algorithm for monsters to move on its own. We also check
the condition after every move a monster made 

4. We have also added numbers and color (mainly numbers) to each cell on the map when displaying the game to be more user-friendly. 
This game can get complicated and chaotic so with numbers user can easily decide which cell he/she wants to go without counting the cells
